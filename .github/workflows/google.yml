# This workflow will build a docker container, publish it to Google Container Registry, and deploy it to GKE when a release is created
#
# To configure this workflow:
#
# 1. Ensure that your repository contains the necessary configuration for your Google Kubernetes Engine cluster, including deployment.yml, kustomization.yml, service.yml, etc.
#
# 2. Set up secrets in your workspace: GKE_PROJECT with the name of the project, GKE_EMAIL with the service account email, GKE_KEY with the Base64 encoded JSON service account key (https://github.com/GoogleCloudPlatform/github-actions/tree/docs/service-account-key/setup-gcloud#inputs).
#
# 3. Change the values for the GKE_ZONE, GKE_CLUSTER, IMAGE, REGISTRY_HOSTNAME and DEPLOYMENT_NAME environment variables (below).

name: Build, Test, and Push docker images

on:
  push:
    branches:
      - master
    paths:
      - "config/**"
  pull_request:
    branches:
      - master
    paths:
      - "config/**"

# Environment variables available to all jobs and steps in this workflow
env:
  GKE_PROJECT: ${{ secrets.GKE_PROJECT }}
  PROJECT: ${{ secrets.PROJECT }}
  GKE_EMAIL: ${{ secrets.GKE_EMAIL }}
  GITHUB_SHA: ${{ github.sha }}
  TAG: ${{ github.sha }}
  GKE_ZONE: us-central1-c
  GKE_CLUSTER: cluster-1
  REGISTRY_HOSTNAME: gcr.io
  CS_URL: ${{ secrets.CS_URL }}
  CS_API_TOKEN: ${{ secrets.CS_API_TOKEN }}

jobs:
  setup-build-publish-deploy:
    name: Setup, Build, Test, Publish
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - run: git fetch origin master --depth 2

      - name: Set up Python
        uses: actions/setup-python@v1
        with:
          python-version: "3.8"

      # Install pip and pytest
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          python -m pip install "git+https://github.com/compute-tooling/compute-studio.git@cluster-refactor#egg=cs-workers&subdirectory=workers"

      # Setup gcloud CLI
      - uses: GoogleCloudPlatform/github-actions/setup-gcloud@master
        with:
          version: "270.0.0"
          service_account_email: ${{ secrets.GKE_EMAIL }}
          service_account_key: ${{ secrets.GKE_KEY }}

      # Configure docker to use the gcloud command-line tool as a credential helper
      - run: |
          # Set up docker to authenticate
          # via gcloud command-line tool.
          gcloud auth configure-docker

      # Build Docker images
      - name: Build
        run: |
          csw models build

      # Test Docker images
      - name: Test
        run: |
          skiptest="$(git log -1 --pretty=%B | grep "skip-test")"
          echo "$skiptest"
          if [[ -z "$skiptest" ]]; then csw models test; fi

      # Push Docker images to Google Container Registry
      - name: Push
        if: github.event_name != 'push'
        run: |
          csw models --base-branch 'HEAD^' push

      # Push Docker image and set it as default image for model on Compute Studio
      - name: Publish
        if: github.event_name == 'push'
        run: |
          csw models --base-branch 'HEAD^' push --lastest-tag

      # Apply updates to cluster
      - name: Deploy
        if: github.event_name == 'push'
        run: |
          gcloud container clusters get-credentials $GKE_CLUSTER --zone $GKE_ZONE --project $GKE_PROJECT
          csw models --base-branch 'HEAD^' config -o - | kubectl apply -f -
          kubectl get pods -o wide
